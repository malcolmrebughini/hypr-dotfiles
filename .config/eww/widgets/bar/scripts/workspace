#!/bin/sh

ic=(0          )

#initial check for occupied workspaces
for num in $(hyprctl workspaces | grep ID | awk '{print $3}'); do 
  export o"$num"="$num"
done


#initial check for focused workspace
export num=$(hyprctl activeworkspace | grep ID | awk '{print $3}')
export f"$num"=$(hyprctl activeworkspace | grep ID | awk '{print $3}')
export fnum=f"$num"
export mon=$(hyprctl monitors | grep -B 4 "focused: yes" | awk 'NR==1{print $3}')
# for num in $(hyprctl monitors | grep -B 4 "focused: yes" | awk 'NR==1{print $3}'); do 
#   export f"$num"=$(hyprctl activeworkspace | grep ID | awk '{print $3}')
#   export fnum=f"$num"
#   export mon=$(hyprctl monitors | grep -B 2 "\($num\)" | awk 'NR==1{print $2}')
# done

workspaces() {

ic=(0          )

if [[ ${1:0:9} == "workspace" ]] && [[ ${1:11} != "special" ]]; then #set focused workspace
  unset -v "$fnum" 
  num=${1:11}
  export f"$num"="$num"
  export fnum=f"$num"

elif [[ ${1:0:10} == "focusedmon" ]]; then #set focused workspace following monitor focus change
  unset -v "$fnum"
  string=${1:12}
  num=${string##*,}
  export mon=${string/,*/}
  export f"$num"="$num"
  export fnum=f"$num"

elif [[ ${1:0:13} == "moveworkspace" ]] && [[ ${1##*,} == "$mon" ]]; then #Set focused workspace following swapactiveworkspace
  unset -v "$fnum"
  string=${1:15}
  num=${string/,*/}
  export f"$num"="$num"
  export fnum=f"$num"

elif [[ ${1:0:15} == "createworkspace" ]]; then #set Occupied workspace
  num=${1:17}
  export o"$num"="$num"
  export onum=o"$num"

elif [[ ${1:0:16} == "destroyworkspace" ]]; then #unset unoccupied workspace
  num=${1:18}
  unset -v o"$num"
fi


for num in $(hyprctl workspaces | grep ID | awk '{print $3}'); do 
  ic[$num]=""
done

ic[$num]=""

}

module() {
#output eww widget
echo 	"(eventbox :onscroll \"echo {} | sed -e 's/up/-1/g' -e 's/down/+1/g' | xargs hyprctl dispatch workspace\" \
          (box	:class \"works\"	:orientation \"$BAR_ORIENTATION\" :spacing 0 :space-evenly \"false\" :valign \"center\"	\
              (eventbox :cursor \"pointer\" (button :onclick \"hyprctl dispatch workspace 1\" :class \"ws-btn\" (label :class \"ws-icon a0$o1$f1\" :text \"${ic[1]}\"))) \
              (eventbox :cursor \"pointer\" (button :onclick \"hyprctl dispatch workspace 2\" :class \"ws-btn\" (label :class \"ws-icon a0$o2$f2\" :text \"${ic[2]}\"))) \
              (eventbox :cursor \"pointer\" (button :onclick \"hyprctl dispatch workspace 3\" :class \"ws-btn\" (label :class \"ws-icon a0$o3$f3\" :text \"${ic[3]}\"))) \
              (eventbox :cursor \"pointer\" (button :onclick \"hyprctl dispatch workspace 4\" :class \"ws-btn\" (label :class \"ws-icon a0$o4$f4\" :text \"${ic[4]}\"))) \
              (eventbox :cursor \"pointer\" (button :onclick \"hyprctl dispatch workspace 5\" :class \"ws-btn\" (label :class \"ws-icon a0$o5$f5\" :text \"${ic[5]}\"))) \
              (eventbox :cursor \"pointer\" (button :onclick \"hyprctl dispatch workspace 6\" :class \"ws-btn\" (label :class \"ws-icon a0$o6$f6\" :text \"${ic[6]}\"))) \
              (eventbox :cursor \"pointer\" (button :onclick \"hyprctl dispatch workspace 7\" :class \"ws-btn\" (label :class \"ws-icon a0$o7$f7\" :text \"${ic[7]}\"))) \
              (eventbox :cursor \"pointer\" (button :onclick \"hyprctl dispatch workspace 8\" :class \"ws-btn\" (label :class \"ws-icon a0$o8$f8\" :text \"${ic[8]}\"))) \
              (eventbox :cursor \"pointer\" (button :onclick \"hyprctl dispatch workspace 9\" :class \"ws-btn\" (label :class \"ws-icon a0$o9$f9\" :text \"${ic[9]}\"))) \
              (eventbox :cursor \"pointer\" (button :onclick \"hyprctl dispatch workspace 10\" :class \"ws-btn\" (label :class \"ws-icon a0$o10$f10\" :text \"${ic[10]}\"))) \
          )\
        )"
}

module

socat -u UNIX-CONNECT:"$XDG_RUNTIME_DIR"/hypr/"$HYPRLAND_INSTANCE_SIGNATURE"/.socket2.sock - | while read -r event; do 
workspaces "$event"
module
done
