;; put path to aesthetic bar config files here ;;
(defvar eww "eww -c $HOME/.config/eww/bar")

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;							Widget Section's							 ;;	
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; Launcher Widgets ;;
(defwidget launcher []
	(box :orientation "v" 
		 :space-evenly "false" 
		 :spacing -15
  	(button :class "launcher_icon" 
		   	:onclick "scripts/popup launcher"  "")))

;; Workspaces Widgets ;;
(defwidget workspaces []
	(literal :content workspace))
(deflisten workspace "scripts/workspace")

;; Battery Widgets ;;
(defwidget bat []
	(literal :content bat))
(deflisten bat "scripts/battery")

;; Wifi Widgets ;;
(defwidget wifi []
	(box		:orientation "v"  
				:tooltip wifi-name
	(button		:onclick "scripts/popup wifi" 
				:class "wifi-icon" wifi-icon)))
(defpoll wifi-icon :interval "1s" "scripts/wifi icon")
(defpoll wifi-name :interval "1s" "scripts/wifi name")

;; Volume Widgets ;;
(defwidget volum []
	(eventbox :onhover "${eww} update volum=true" 		
			  :onhoverlost "${eww} update volum=false"
			  :cursor "pointer"
	(box      :orientation "v" 	  
			  :space-evenly "false" 
			  :spacing "0"
	(revealer :transition "slideup" 
			  :reveal volum         
			  :duration "550ms"
	(scale    :class "volbar" 	  
			  :value volume_value
			  :orientation "v"      
			  :flipped true 
			  :tooltip "Volume: ${volumen}%" 
			  :max 101 
			  :min 0 
			  :onchange "scripts/volume set {}" ))
	(button   :onclick "scripts/volume --toggle-muted" 
			  :onrightclick "scripts/popup audio"   
			  :class "volume-icon" "${volume_icon}"
	))))
(defpoll volume_icon :interval "0.5s" "~/.config/eww/bar/scripts/volume --icon")
(defpoll volumen :interval "0.5s" "~/.config/eww/bar/scripts/volume --percentage")
(defpoll volume_value :interval "0.5s" "~/.config/eww/bar/scripts/volume --vol")
(defvar volum false)

;; Control Panel Widgets ;;	
(defwidget control []
	(box :orientation "v" 
		 :space-evenly false  
		 :class "control"
(bat)
(wifi)
(volum)))

;; Clock Widgets ;;
(defwidget time []
	(eventbox :cursor "pointer"
	(box	:orientation "v" 
			:class "time" 
			:valign "end"
	(button	:onclick "scripts/popup calendar"	
			:class "time-hour" hour)
	(button	:onclick "scripts/popup calendar"	
			:class "time-min"  min))))
(defpoll hour	:interval "1s"	"date '+%H'")
(defpoll min	:interval "1s"	"date '+%M'")

;; Calendar Widgets ;;
(defwidget cal []
	(box :class "cal-box" 
		 :orientation "v"
	(box :class "cal-inner-box"
	(calendar :class "cal" 
			  :day calendar_day 
			  :month calendar_month 
			  :year calendar_year))))
(defpoll calendar_day :interval "10h"
    "date '+%d'")
(defpoll calendar_month :interval "10h"
    "date +%m")
(defpoll calendar_year :interval "10h"
    "date '+%Y'")

;; Powermenu Widgets ;;
(defwidget power []
	(eventbox	:onhover "${eww} update power=true"	
				:onhoverlost "${eww} update power=false" 
				:cursor "pointer"
	(box		:orientation  "v"					
				:space-evenly "false" 	 
				:vexpand "false" 	
				:class "powermenu"
	(revealer	:transition "slideup"				
				:reveal power			 
				:duration "550ms"
	(box		:orientation "v"					
				:space-evenly "false"

  	(button		:class "button-reb"					
	  			:tooltip "Reboot"		 
				:onclick "reboot"	"")

	(button		:class "button-quit" 				
				:tooltip "Logout" 		 
				:onclick "hyprctl dispatch exit" "")))

	(button		:class "button-off"					
				:tooltip "Shutdown"		 
				:onclick "shutdown now"	""))))
;;"⏻"
(defvar power false)

;; Top Widgets ;;
(defwidget top []
	(box	:orientation "v" 
			:space-evenly "false" 
			:valign "start" 
(workspaces)))

;; Bottom Widgets ;;
(defwidget bottom []
	(box	:orientation "v" 
			:space-evenly false 
(time)
(power)))

;; End Widgets ;;
(defwidget end []
	(box :orientation "v" 
		 :space-evenly "false" 
		 :valign "end" 
		 :spacing 5
(control)
(bottom)))

;; Bar Widgets ;;
(defwidget bar []
	(box :class "eww_bar" 
		 :orientation "v" 
		 :vexpand "false" 
		 :hexpand "false"
(top)
(end)))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;							Window Section's							 ;;	
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Bar Windows ;;
(defwindow bar
	:geometry (geometry :x "0" 
						:y "0" 
						:height "100%" 
						:width "47px")
	:monitor 0
	:reserve (struts :distance "35px" 
					 :side "left")
	:wm-ignore false
	:hexpand "false"
	:vexpand "false"
(bar))

;; Calendar Windows ;;
(defwindow calendar
	:monitor 0
	:geometry (geometry :x "47px" 
						:y "80%" 
						:width "270px" 
						:height "60px")
(cal))





